facet_wrap(vars(distributor)) +
stat_summary(fun = "median", geom = "bar") +
scale_y_discrete(
limits = c("0", "1x", "2x", "3x"),
breaks=c(100, 200, 300, 400)
) +
labs(title = "Profits Made by Film Distributors",
subtitle = "Ratio of Profits to Budgets",
x = "Genre",
y = "Median Profit Ratio") +
coord_flip()
ggplot(mov, aes(x = genre, y = profit_ratio)) +
facet_wrap(vars(distributor)) +
stat_summary(fun = "median", geom = "bar") +
scale_y_discrete(
limits = c(0,1000),
breaks=c("0", "1x", "2x", "3x")
) +
labs(title = "Profits Made by Film Distributors",
subtitle = "Ratio of Profits to Budgets",
x = "Genre",
y = "Median Profit Ratio") +
coord_flip()
ggplot(mov, aes(x = genre, y = profit_ratio)) +
facet_wrap(vars(distributor)) +
stat_summary(fun = "median", geom = "bar") +
scale_y_discrete(
limits =c("0", "1x", "2x", "3x")
breaks=c("0", "1x", "2x", "3x")
ggplot(mov, aes(x = genre, y = profit_ratio)) +
facet_wrap(vars(distributor)) +
stat_summary(fun = "median", geom = "bar") +
scale_y_discrete(
limits =c("0", "1x", "2x", "3x"),
breaks=c("0", "1x", "2x", "3x")
) +
labs(title = "Profits Made by Film Distributors",
subtitle = "Ratio of Profits to Budgets",
x = "Genre",
y = "Median Profit Ratio") +
coord_flip()
library(usethis)
use_git()
use_github()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
use_github()
quarto render
Ikea <- Ikea %>%
mutate(category = as.factor(category)) %>%
drop_na(price, category, other_colors)
# Create a ridge plot using gf_density()
gf_density(
~ price | category,
data = Ikea,
fill = ~ other_colors,
color = ~ other_colors,
adjust = 1,
alpha = 0.6
) +
scale_x_log10() +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = ""
)
Ikea<- read_delim(file="../../data/ikea.csv",delim=";")
Ikea
glimpse(Ikea)
inspect(Ikea)
ikea_data_clean <- Ikea %>%
mutate(price = as.numeric(price),
category = as.factor(category),
other_colors = as.factor(other_colors)) %>%
drop_na(price, category, other_colors)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_continuous(limits = c(0, 10000)) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
ikea_data_clean <- Ikea %>%
mutate(price = as.numeric(price),
category = as.factor(category),
other_colors = as.factor(other_colors))
drop_na(price, category, other_colors)
ikea_data_clean <- Ikea %>%
mutate(price = as.numeric(price),
category = as.factor(category),
other_colors = as.factor(other_colors)) %>%
drop_na(price, category, other_colors)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_continuous(limits = c(0, 10000)) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_continuous(
limits = c(0, 10000),
breaks = c(1, 10, 100, 1000, 10000)
) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
ikea_data_clean <- Ikea %>%
mutate(price = as.numeric(price),
category = as.factor(category),
other_colors = as.factor(other_colors)) %>%
drop_na(price, category, other_colors)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_log10(
limits = c(1, 10000),
breaks = c(1, 10, 100, 1000, 10000)
) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
Ikea <- Ikea %>%
mutate(category = as.factor(category)) %>%
drop_na(price, category, other_colors)
# Create a ridge plot using gf_density()
gf_density(
~ price | category,
data = Ikea,
fill = ~ other_colors,
color = ~ other_colors,
adjust = 1,
alpha = 0.6
) +
scale_x_log10() +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = ""
)
Ikea<- read_delim(file="../../data/ikea.csv",delim=";")
Ikea
glimpse(Ikea)
inspect(Ikea)
Ikea <- Ikea %>%
mutate(category = as.factor(category)) %>%
drop_na(price, category, other_colors)
# Create a ridge plot using gf_density()
gf_density(
~ price | category,
data = Ikea,
fill = ~ other_colors,
color = ~ other_colors,
adjust = 1,
alpha = 0.6
) +
scale_x_log10() +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = ""
)
ikea_data_clean <- Ikea %>%
mutate(price = as.numeric(price),
category = as.factor(category),
other_colors = as.factor(other_colors)) %>%
drop_na(price, category, other_colors)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_continuous(limits = c(0, 10000)) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_continuous(
limits = c(0, 10000),
breaks = c(1, 10, 100, 1000, 10000)
) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
ikea_data_clean <- Ikea %>%
mutate(price = as.numeric(price),
category = as.factor(category),
other_colors = as.factor(other_colors)) %>%
drop_na(price, category, other_colors)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_log10(
limits = c(1, 10000),
breaks = c(1, 10, 100, 1000, 10000)
) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
Ikea <- Ikea %>%
mutate(category = as.factor(category)) %>%
drop_na(price, category, other_colors)
# Create a ridge plot using gf_density()
gf_density(
~ price | category,
data = Ikea,
fill = ~ other_colors,
color = ~ other_colors,
adjust = 1,
alpha = 0.6
) +
scale_x_log10() +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = ""
)
ikea_data_clean <- Ikea %>%
mutate(price = as.numeric(price),
category = as.factor(category),
other_colors = as.factor(other_colors)) %>%
drop_na(price, category, other_colors)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_log10(
limits = c(1, 10000),
breaks = c(1, 10, 100, 1000, 10000)
) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_log10(
limits = c(1, 10000),
breaks = c(1, 10, 100, 1000, 10000)
) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_continuous(
limits = c(0, 10000),
breaks = c(1, 10, 100, 1000, 10000)
) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
ikea_data_clean <- Ikea %>%
mutate(price = as.numeric(price),
category = as.factor(category),
other_colors = as.factor(other_colors)) %>%
drop_na(price, category, other_colors)
ggplot(ikea_data_clean, aes(x = price, y = category, fill = other_colors)) +
geom_density_ridges(alpha = 0.3, rel_min_height = 0.005) +
scale_x_continuous(limits = c(0, 10000)) +
labs(
title = "How much do items in each IKEA category cost?",
subtitle = "Are they available in other colors?",
x = "Price (USD)",
y = "Category"
)
use_git()
use_github()
usethis::use_git_remote("origin", url = NULL, overwrite = TRUE)
use_github()
rlang::last_trace()
Toons<- read_delim(file="../../data/Cartoon.csv",delim=";")
Cartoon
library(readr)
Cartoon <- read_csv("data/Cartoon.csv")
library(readr)
Cartoon <- read_csv("data/Cartoon.csv")
library(readr)
Cartoon <- read_csv("../../data/Cartoon.csv")
Cartoon
#| label: setup
library(mosiac)
#| label: setup
library(mosaic)
library(crosstable)
library(tidyverse)
library(readr)
Tip <- read_csv("../../data/tip.csv")
Tip
Tip %>%
crosstable(Tip~'Food prefence') %>%
as_flextable()
Tip %>%
crosstable(Tip~'Food prefence') %>%
as_flextable()
tip %>%
crosstable(Tip~'Food prefence') %>%
as_flextable()
Tip %>%
crosstable(Tip ~'Food prefence') %>%
as_flextable()
Tip %>%
crosstable(Tip ~ `Food preferance`) %>%
as_flextable()
Tip %>%
mosaic :: t_test(Tip ~ `Food preferance`)
Tip %>%
mosaic :: t_test(Tip ~ `Food preferance`) %>%
broom:: tidy()
Tip<-Tip %>%
mutate(`Food preferance`= as.factor(`Food preferance`))
Tip %>%
mosaic :: t_test(Tip ~ `Food preferance`) %>%
broom:: tidy()
Tip %>%
mosaic :: t_test(Tip ~ `Food preferance`, data = Tip) %>%
broom:: tidy()
Tip<-Tip %>%
mutate(`Food preferance`= as.factor(`Food preferance`))
Tip<-Tip %>%
mutate(`Food preferance`= as.factor(`Food preferance`))
Tip<-Tip %>%
mutate(`Food preferance`= as.factor(`Food preferance`))
Tip
Tip %>%
mosaic :: t_test(Tip ~ `Food preferance`, data = Tip) %>%
broom:: tidy()
mosaic :: t_test(Tip ~ `Food preferance`, data = Tip) %>%
broom:: tidy()
#| label: setup
library(mosaic)
library(crosstable)
library(tidyverse)
library(ggformula)
Tip %>%
gf_histogram(Tip~ `Food preferance`)
Tip %>%
gf_histogram(`Food preferance`~Tip)
Tip %>%
gf_histogram(`Food preferance`~ Tip)
Tip %>%
gf_histogram(Tip~ `Food preferance`)
Tip %>%
gf_histogram(~Tip)
Tip %>%
gf_histogram(~Tip| `Food preferance`)
Tip<-Tip %>%
mutate(`Food preferance`= as.factor(`FP`))
Tip<-Tip %>%
mutate(Fp= as.factor(`Food preferance`))
Tip
Tip %>%
gf_histogram(~Tip| Fp)
mosaic :: t_test(Tip ~ Fp, data = Tip) %>%
broom:: tidy()
shapiro.test(x = Tip$Fp)
??shapiro.test
#| label: setup
library(mosaic)
library(crosstable)
library(tidyverse)
library(ggformula)
shapiro.test(x = Tip$Fp)
shapiro.test(x = Tip %>% filter(fp = "Veg") %>% select(Tip))
shapiro.test(x = Tip %>% filter(fp == "Veg") %>% select(Tip))
shapiro.test(x = Tip %>% filter(Fp == "Veg") %>% select(Tip))
Tip %>% filter(Fp == "Veg") %>% select(Tip) -> Veg
Tip %>% filter(Fp == "Non-veg") %>% select(Tip) -> NonVeg
Veg
NonVeg
shapiro.test(Veg$Tip)
shapiro.test(NonVeg$Tip)
??Mann Whitney
??amnn
??wilcox.test
wilcox.test(Veg$Tip)
wilcox.test(Veg$Tip)
wilcox.test(NonVeg$Tip)
wilcox.test(Tip$Fp)
wilcox.test(Fp$Tip)
wilcox.test(Tip$Fp)
wilcox.test(Tip ~ Fp, data = Tip) %>%
broom:: tidy()
Tip %>% filter(Fp == "Veg") %>% select(Tip) -> Veg
Tip %>% filter(Fp == "Non-veg") %>% select(Tip) -> NonVeg
Veg
NonVeg
shapiro.test(Veg$Tip)
shapiro.test(NonVeg$Tip)
null_dist_mosaic <-
mosaic::do(9999) * mean(
~ abs(y) *
sample(c(-1, 1), # +/- 1s multiply y
length(y), # How many +/- 1s?
replace = T
), # select with replacement
data = Tip
)
##
range(null_dist_mosaic$mean)
obs_mean <- mean(~y, data = Tip)
belief1 <- 0 # What we think the mean is
obs_diff_mosaic <- obs_mean - belief1
obs_diff_mosaic
gf_histogram(
~mean,
data = null_dist_mosaic,
fill = ~ (mean >= obs_diff_mosaic),
bins = 50, title = "Distribution of Permutation Means under Null Hypothesis",
subtitle = "Why is the mean of the means zero??"
) %>%
gf_labs(
x = "Calculated Random Means",
y = "How Often do these occur?"
) %>%
gf_vline(xintercept = obs_diff_mosaic, colour = "red")
obs_diff_Fp<- diffmean(Tip~Fp,data=Tip)
obs_diff_Fp
null_dist_tip <-
do(4999) * diffmean(data = Tip,
Tip ~ shuffle(Fp))
null_dist_tip
###
prop1(~ diffmean <= obs_diff_Fp, data = null_dist_tip)
###
gf_histogram(data = null_dist_tip, ~ diffmean,
bins = 25) %>%
gf_vline(xintercept = obs_diff_Fp,
colour = "red", linewidth = 1,
title = "Null Distribution by Permutation",
subtitle = "Histogram") %>%
gf_labs(x = "Difference in Means")
###
#| label: setup
library(tidyverse)
library(mosaic)
library(skimr)
library(ggformula)
library(broom)
library(crosstable)
library(knitr)
library(kableExtra)
library(supernova)
install.packages("supernova")
#| label: setup
library(tidyverse)
library(mosaic)
library(skimr)
library(ggformula)
library(broom)
library(crosstable)
library(knitr)
library(kableExtra)
library(supernova)
library(ggprism)
library(patchwork)
library(infer)
#| label: setup
library(tidyverse)
library(mosaic)
library(skimr)
library(ggformula)
library(broom)
library(crosstable)
library(knitr)
library(kableExtra)
library(supernova)
library(ggprism)
library(patchwork)
library(infer)
grade <- read_csv("../../Data/grade.csv")
#| label: setup
library(tidyverse)
library(mosaic)
library(skimr)
library(ggformula)
library(crosstable)
library(infer)
library(patchwork)
library(ggprism)
library(supernova)
#| label: Read the data
grades_data <- read.csv("../../data/Grades.csv")
grade <- read_csv("../../Data/grade.csv")
grade <- read_csv("../../Data/grade.csv")
grade <- read_csv("../../Data/Grades.csv")
grade <- read_csv("../../Data/Grades.csv")
